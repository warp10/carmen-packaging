Index: carmen-0.7.4-beta/src/configure
===================================================================
--- carmen-0.7.4-beta.orig/src/configure	2008-07-28 11:34:58.000000000 +0200
+++ carmen-0.7.4-beta/src/configure	2010-07-13 18:21:41.090335989 +0200
@@ -4,6 +4,9 @@
 use English;
 use FileHandle;
 
+# This line is needed to turn autoflush on
+local $| = 1;
+
 srand (time ^ $$ ^ unpack "%L*", `ps axww | gzip`);
 
 eval {
@@ -46,7 +49,10 @@
 my (@user_libs, $header_dir);
 
 foreach (@ARGV) {
-  if (/help/ or /\-h/) {
+  #modifying the regex to make it match "-h" only, otherwise it clashes aginst
+  #--header
+  #if (/help/ or /\-h/) {
+  if (/help/ or /^\-h$/) {
     my ($prog_name) = $PROGRAM_NAME =~ /([^\/]+)$/;
     die<<EOF;
 Usage: $prog_name [--help] [--prefix=<install path>] [options]
@@ -71,8 +77,13 @@
   if (/^-L/) {
     push @user_libs, $_;
   }
-  if (/^--headers/) {
-    $header_dir = $_;
+  #This check is buggy and doesn't work. BTW, I'm changing the interface of
+  #configure: headers are now passed with --headers=</path/to/headers> (exactely
+  #like --prefix does
+  #if (/^--headers/) {
+  #  $header_dir = $_;
+  if (/headers/) {
+     ($header_dir) = /headers=(.*)/;
   } 
   if (/nographics/) {
     $nographics = 1;
@@ -271,19 +282,22 @@
 }
   print "found, version $gtk_major.$gtk_minor.$revision\n";
   
-  print "Searching for libgdk_imlib.a...";
-  if (-e "/usr/lib/libgdk_imlib.a" or 
-      -e "/usr/local/lib/libgdk_imlib.a" or
-      -e "/opt/gnome/lib/libgdk_imlib.a") {
-      print " found\n";
-  } else {
-
-      print " ${red}not found ${normal}\n\n";
-      print "Could not find libgdk_imlib.a in /usr/lib,\n";
-      print "/usr/local/lib, nor in /opt/gnome/lib/\n";
-      print "Please install libgdk_imlib.a or\n${red}re-run $PROGRAM_NAME with --nographics${normal}\n";
-      die "\n";
-  }
+  #This library is deprecated and needs to be replaced. A workaroung must be
+  #found to compile CARMEN. In the meantime, I'm overridiing the check for
+  #libgdk_imlib.a to keep configure going on
+  #print "Searching for libgdk_imlib.a...";
+  #if (-e "/usr/lib/libgdk_imlib.a" or 
+  #    -e "/usr/local/lib/libgdk_imlib.a" or
+  #    -e "/opt/gnome/lib/libgdk_imlib.a") {
+  #    print " found\n";
+  #} else {
+
+  #    print " ${red}not found ${normal}\n\n";
+  #    print "Could not find libgdk_imlib.a in /usr/lib,\n";
+  #    print "/usr/local/lib, nor in /opt/gnome/lib/\n";
+  #    print "Please install libgdk_imlib.a or\n${red}re-run $PROGRAM_NAME with --nographics${normal}\n";
+  #    die "\n";
+  #}
   
   return $gtk_config;
 }
@@ -416,6 +430,9 @@
 
 sub ask_oldlaser{
 
+  #Builders don't like questions. Defaulting to N:
+  print "New laser server will be used\n";
+  return 0;
   print "Should the old laser server be used instead of the new one: [y/N] ";
 
   my $oldlaser_install = <STDIN>;
@@ -429,6 +446,10 @@
 }
 
 sub ask_nocpp{
+  
+  #Builders don't like questions. Defaulting to Y:
+  print "C++ tools will be installed by default\n";
+  return 1;
 
   print "Should the C++ tools be installed for CARMEN: [Y/n] ";
 
@@ -550,8 +571,11 @@
 support, for example, if you will be working exclusively in simulation.
 
 EOF
+  
   print "Robot numbers [*]: ";
-  my $type_string = <STDIN>;
+  #Builders don't like question. Defaulting to * (all):
+  #my $type_string = <STDIN>;
+  my $type_string = "*";
   chomp $type_string;
   if (length($type_string) == 0 or $type_string eq "*" or 
       $type_string eq "$max") {
@@ -964,7 +988,7 @@
 
 EOF
 
-  open GLOBAL_INCLUDE, "< global/global.h" or die 
+  open GLOBAL_INCLUDE, "< global/global.h" or die
     "Couldn't open global/global.h for reading: $!\n";
   my @global_headers = <GLOBAL_INCLUDE>;
 
